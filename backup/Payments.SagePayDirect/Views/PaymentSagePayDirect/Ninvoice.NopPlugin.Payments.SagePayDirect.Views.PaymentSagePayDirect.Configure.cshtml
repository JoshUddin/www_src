@{
    Layout = "";
}

@model Ninvoice.NopPlugin.Payments.SagePayDirect.ViewModel.SagePayDirectConfigurationViewModel

@using Nop.Web.Framework;
@using Nop.Web.Framework.UI;
@Html.Action("StoreScopeConfiguration", "Setting", new { area = "Admin" })


@using (Html.BeginForm())
{

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.VendorName_OverrideForStore, model => model.VendorName, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.VendorName):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => Model.VendorName)
                @Html.ValidationMessageFor(model => model.VendorName)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.Mode_OverrideForStore, model => model.Mode, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.Mode):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.Mode, Model.AvailableModes, new { @class = "dropdownlists" })
                @Html.ValidationMessageFor(model => model.Mode)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.TransactionType_OverrideForStore, model => model.TransactionType, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.TransactionType):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.TransactionType, Model.TransactionTypes, new { @class = "dropdownlists" })
                @Html.ValidationMessageFor(model => model.TransactionType)
            </td>
        </tr>

    </table>


    <div id="sagepaydirect-configure">
        <ul>
            <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
                General
            </li>
            <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
                Debit/Credit Cards
            </li>
            <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
                Endpoint
            </li>
        </ul>
        <div>
            @TabGeneral()
        </div>
        <div>
            @TabCreditCards()
        </div>
        <div>
            @TabEndPoints()
        </div>
    </div>
    <script>
        $(document).ready(function() {
            $("#sagepaydirect-configure").kendoTabStrip({
                animation: {
                    open: {
                        effects: "fadeIn"
                    }
                },
                select: tabstrip_on_tab_select
            });
        });
    </script>

    @*@Html.Telerik().TabStrip().Name("sagepaydirect-configure").Items(x =>
        {
            x.Add().Text("General").Content(TabGeneral().ToHtmlString()).Selected(true);
            x.Add().Text("Card Types/3D Secure").Content(TabCreditCards().ToHtmlString());
            x.Add().Text("Sage Pay Endpoints").Content(TabEndPoints().ToHtmlString());
        })*@
    <table class="adminContent">
        <tr>
            <td colspan="2" width="100%">
                <input type="submit" name="save" class="t-button" value="@T("Admin.Common.Save")" />
            </td>
        </tr>
    </table>
    @helper TabGeneral()
{
    <p>General</p>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.AllowRefunds_OverrideForStore, model => model.AllowRefunds, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AllowRefunds):
            </td>
            <td class="adminData">
                @Html.CheckBoxFor(model => model.AllowRefunds)
                @Html.ValidationMessageFor(model => model.AllowRefunds)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.AllowPartialRefundsBeforeCapture_OverrideForStore, model => model.AllowPartialRefundsBeforeCapture, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AllowPartialRefundsBeforeCapture):
            </td>
            <td class="adminData">
                @Html.CheckBoxFor(model => model.AllowPartialRefundsBeforeCapture)
                @Html.ValidationMessageFor(model => model.AllowPartialRefundsBeforeCapture)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.AttemptAbortBeforeRefund_OverrideForStore, model => model.AttemptAbortBeforeRefund, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AttemptAbortBeforeRefund):
            </td>
            <td class="adminData">
                @Html.CheckBoxFor(model => model.AttemptAbortBeforeRefund)
                @Html.ValidationMessageFor(model => model.AttemptAbortBeforeRefund)
            </td>
        </tr>
    </table>

}
    @helper TabCreditCards()
{
    <table class="adminContent">
        <tr>
            <td colspan="2">
                <p>
                    <h2>
                        3D Secure Configuration
                    </h2>
                </p>

            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.Enable3DSecure_OverrideForStore, model => model.Enable3DSecure, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.Enable3DSecure):
            </td>
            <td class="adminData">
                @Html.CheckBoxFor(model => model.Enable3DSecure)
                @Html.ValidationMessageFor(model => model.Enable3DSecure)
            </td>
        </tr>
        <tr>
            <td>
                @Html.OverrideStoreCheckboxFor(model => model.EnabledCards_OverrideForStore, model => model.EnabledCards, Model.ActiveStoreScopeConfiguration)

                <table width="50%">
                    <thead class="t-grid-header">
                        <tr>
                            <th class="t-header">Card Type</th>
                            <th class="t-header">Enabled</th>
                            <th class="t-header">3D Secure Enabled</th>
                        </tr>
                    </thead>
                    @for (int i = 0; i < Model.SelectedCardSchemes.Count(); i++)
                    {

                        <tr>
                            <td>
                                @Html.HiddenFor(m => Model.SelectedCardSchemes[i].CardType)
                                @Model.SelectedCardSchemes[i].CardTypeDescription
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => Model.SelectedCardSchemes[i].Enabled)
                            </td>
                            <td>
                                @Html.CheckBoxFor(m => Model.SelectedCardSchemes[i].Enable3DSecure)
                            </td>
                        </tr>

                    }
                </table>
            </td>
        </tr>
    </table>

    <img src="@Url.Content("~/Plugins/Payments.SagePayDirect/Content/images/3d-secure.jpg")" alt="Twitter" />
}
    @helper TabEndPoints()
{
    <table class="adminContent">
        <tr>
            <td colspan="2">
                <p>
                    <b>
                        WARNING: Only change these setting if required to do so by Sage Pay.  It is extremely rare that these endpoints will need to be changed.
                    </b>
                </p>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <h3>Sage Pay Test Endpoints</h3>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.RegisterPaymentTestUrl_OverrideForStore, model => model.RegisterPaymentTestUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.RegisterPaymentTestUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.RegisterPaymentTestUrl)
                @Html.ValidationMessageFor(model => model.RegisterPaymentTestUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.RefundTestUrl_OverrideForStore, model => model.RefundTestUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.RefundTestUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.RefundTestUrl)
                @Html.ValidationMessageFor(model => model.RefundTestUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.AbortTestUrl_OverrideForStore, model => model.AbortTestUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AbortTestUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.AbortTestUrl)
                @Html.ValidationMessageFor(model => model.AbortTestUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.VoidTestUrl_OverrideForStore, model => model.VoidTestUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.VoidTestUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.VoidTestUrl)
                @Html.ValidationMessageFor(model => model.VoidTestUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.ReleaseTestUrl_OverrideForStore, model => model.ReleaseTestUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.ReleaseTestUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.ReleaseTestUrl)
                @Html.ValidationMessageFor(model => model.ReleaseTestUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.ThreeDCallbackTestUrl_OverrideForStore, model => model.ThreeDCallbackTestUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.ThreeDCallbackTestUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.ThreeDCallbackTestUrl)
                @Html.ValidationMessageFor(model => model.ThreeDCallbackTestUrl)
            </td>
        </tr>
        <tr>
            <td colspan="2" width="100%">
                <h3>Sage Pay LIVE Endpoints</h3>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.RegisterPaymentLiveUrl_OverrideForStore, model => model.RegisterPaymentLiveUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.RegisterPaymentTestUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.RegisterPaymentLiveUrl)
                @Html.ValidationMessageFor(model => model.RegisterPaymentLiveUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.RefundLiveUrl_OverrideForStore, model => model.RefundLiveUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.RefundLiveUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.RefundLiveUrl)
                @Html.ValidationMessageFor(model => model.RefundLiveUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.AbortLiveUrl_OverrideForStore, model => model.AbortLiveUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.AbortLiveUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.AbortLiveUrl)
                @Html.ValidationMessageFor(model => model.AbortLiveUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.VoidLiveUrl_OverrideForStore, model => model.VoidLiveUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.VoidLiveUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.VoidLiveUrl)
                @Html.ValidationMessageFor(model => model.VoidLiveUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.ReleaseLiveUrl_OverrideForStore, model => model.ReleaseLiveUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.ReleaseLiveUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.ReleaseLiveUrl)
                @Html.ValidationMessageFor(model => model.ReleaseLiveUrl)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.OverrideStoreCheckboxFor(model => model.ThreeDCallbackLiveUrl_OverrideForStore, model => model.ThreeDCallbackLiveUrl, Model.ActiveStoreScopeConfiguration)
                @Html.NopLabelFor(model => model.ThreeDCallbackLiveUrl):
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.ThreeDCallbackLiveUrl)
                @Html.ValidationMessageFor(model => model.ThreeDCallbackLiveUrl)
            </td>
        </tr>
    </table>
}
    <img src="@Url.Content("~/Plugins/Payments.SagePayDirect/Content/images/logo.png")" alt="Sage Pay" />
}